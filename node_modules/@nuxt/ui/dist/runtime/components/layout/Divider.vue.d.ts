import type { PropType } from 'vue';
import type { Avatar } from '../../types';
declare const _default: import("vue").DefineComponent<{
    label: {
        type: StringConstructor;
        default: null;
    };
    icon: {
        type: StringConstructor;
        default: null;
    };
    avatar: {
        type: PropType<Avatar>;
        default: null;
    };
    orientation: {
        type: PropType<"horizontal" | "vertical">;
        default: string;
        validator: (value: string) => boolean;
    };
    type: {
        type: PropType<"solid" | "dotted" | "dashed">;
        default: string;
        validator: (value: string) => boolean;
    };
    class: {
        type: PropType<any>;
        default: undefined;
    };
    ui: {
        type: PropType<Partial<any>>;
        default: undefined;
    };
}, {
    ui: import("vue").ComputedRef<any>;
    attrs: import("vue").ComputedRef<Pick<{
        [x: string]: unknown;
    }, string>>;
    wrapperClass: import("vue").ComputedRef<string>;
    containerClass: import("vue").ComputedRef<string>;
    borderClass: import("vue").ComputedRef<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    label: {
        type: StringConstructor;
        default: null;
    };
    icon: {
        type: StringConstructor;
        default: null;
    };
    avatar: {
        type: PropType<Avatar>;
        default: null;
    };
    orientation: {
        type: PropType<"horizontal" | "vertical">;
        default: string;
        validator: (value: string) => boolean;
    };
    type: {
        type: PropType<"solid" | "dotted" | "dashed">;
        default: string;
        validator: (value: string) => boolean;
    };
    class: {
        type: PropType<any>;
        default: undefined;
    };
    ui: {
        type: PropType<Partial<any>>;
        default: undefined;
    };
}>>, {
    icon: string;
    avatar: Avatar;
    ui: Partial<any>;
    class: any;
    label: string;
    type: "solid" | "dotted" | "dashed";
    orientation: "horizontal" | "vertical";
}, {}>;
export default _default;
